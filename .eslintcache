[{"C:\\DEV-VSCODE\\desafio-onesight\\src\\index.js":"1","C:\\DEV-VSCODE\\desafio-onesight\\src\\reducers\\loginReducer.js":"2","C:\\DEV-VSCODE\\desafio-onesight\\src\\reducers\\tableModeReducer.js":"3","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\Login.js":"4","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealCategories.js":"5","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealsList.js":"6","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealDetails.js":"7","C:\\DEV-VSCODE\\desafio-onesight\\src\\errors\\Error404.js":"8","C:\\DEV-VSCODE\\desafio-onesight\\src\\services\\api.js":"9","C:\\DEV-VSCODE\\desafio-onesight\\src\\components\\tablesColumns.js":"10","C:\\DEV-VSCODE\\desafio-onesight\\src\\utils\\Utils.js":"11","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\CreateAccount.js":"12","C:\\DEV-VSCODE\\desafio-onesight\\src\\routes.js":"13","C:\\DEV-VSCODE\\desafio-onesight\\src\\components\\Header.js":"14","C:\\DEV-VSCODE\\desafio-onesight\\src\\App.js":"15"},{"size":219,"mtime":1606328717953,"results":"16","hashOfConfig":"17"},{"size":248,"mtime":1606484905862,"results":"18","hashOfConfig":"17"},{"size":256,"mtime":1606484904186,"results":"19","hashOfConfig":"17"},{"size":6502,"mtime":1606517757817,"results":"20","hashOfConfig":"17"},{"size":8446,"mtime":1606491336839,"results":"21","hashOfConfig":"17"},{"size":8930,"mtime":1606491339357,"results":"22","hashOfConfig":"17"},{"size":11835,"mtime":1606491332157,"results":"23","hashOfConfig":"17"},{"size":264,"mtime":1606361056930,"results":"24","hashOfConfig":"17"},{"size":123,"mtime":1606403100081,"results":"25","hashOfConfig":"17"},{"size":559,"mtime":1606486270405,"results":"26","hashOfConfig":"17"},{"size":284,"mtime":1606491211919,"results":"27","hashOfConfig":"17"},{"size":10013,"mtime":1606491375655,"results":"28","hashOfConfig":"17"},{"size":1015,"mtime":1606475916626,"results":"29","hashOfConfig":"17"},{"size":7285,"mtime":1606496946789,"results":"30","hashOfConfig":"17"},{"size":534,"mtime":1606484595935,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vu372u",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\DEV-VSCODE\\desafio-onesight\\src\\index.js",[],["65","66"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\reducers\\loginReducer.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\reducers\\tableModeReducer.js",[],["67","68"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\Login.js",["69"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealCategories.js",["70","71","72"],"import { useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport api from \"../services/api\";\r\nimport {urlTheMealDB} from \"../utils/Utils\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Container, Paper, TableContainer } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport MaUTable from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\n\r\nimport { useTable } from \"react-table\";\r\nimport { TABLE_MEALS_CATEGORIES_COLUMNS } from \"../components/tablesColumns\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*\r\n  Categorias de alimentos\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    // marginBottom: 20\r\n  },\r\n  media: {\r\n    height: 200,\r\n    backgroundSize: \"contain\",\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '10px 0px 0px 0px',\r\n    marginBottom: '20px'\r\n  },\r\n  preloader: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    marginTop: '15px',\r\n    marginBottom: '20px', \r\n  },\r\n  tableCategoryImage: {\r\n    borderRadius: '7px',\r\n  }\r\n}));\r\n\r\nexport default function MealCategories() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const tableMode = useSelector((state) => {\r\n    return state.table_mode;\r\n  });\r\n  \r\n  const [allMealsCategories, setAllMealsCategories] = useState([]);\r\n  // const [tableMode, setTableMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getMealCategories = async () => {\r\n      const data = await api.get(`${urlTheMealDB}/categories.php`)\r\n        .then((response) => {\r\n          return response.data;\r\n        });\r\n\r\n      const newData = data.categories.map(category => {\r\n        return {...category, 'categoryLink': `${category.strCategory}`};\r\n      })\r\n      setAllMealsCategories(newData);\r\n    };\r\n\r\n    getMealCategories();\r\n    console.log(allMealsCategories);\r\n  }, []);\r\n  \r\n  function Table() {\r\n    const columns = useMemo(() => TABLE_MEALS_CATEGORIES_COLUMNS, []);\r\n    const data = useMemo(() => allMealsCategories, []);\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable({\r\n      columns,\r\n      data,\r\n    });\r\n\r\n    return (\r\n      <div>\r\n          <TableContainer component={Paper}>\r\n          <MaUTable {...getTableProps()}>\r\n            <TableHead>\r\n              {headerGroups.map((headerGroup, index) => {\r\n                <TableRow key={index} {...headerGroup.getHeaderGroupProps()}>\r\n                  {\r\n                    headerGroup.headers.map((column, index) => {\r\n                      <TableCell key={index} {...column.getHeaderProps()}>\r\n                        {column.render('Header')}\r\n                      </TableCell>\r\n                    })\r\n                  }\r\n                </TableRow>\r\n              })}\r\n            </TableHead>\r\n            <TableBody {...getTableBodyProps()}>\r\n              {\r\n                rows.map(row => {\r\n                  prepareRow(row);\r\n                  return (\r\n                    <TableRow {...row.getRowProps()} >\r\n                      {\r\n                        row.cells.map((cell, index) => {\r\n                          if (index === 0) {\r\n                            return (\r\n                              <TableCell key={index}>\r\n                                <img src={cell.row.cells[index].value} alt=\"Category\" width=\"100px\" className={classes.tableCategoryImage} />\r\n                              </TableCell>\r\n                            )\r\n                          }else if(index === 3) {\r\n                            return (\r\n                              <TableCell key={index}>\r\n                                  <Button \r\n                                  fullWidth\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => handleClickGoToCategoryMeals(cell.row.cells[index-2].value, cell.row.cells[index-2].value, cell.row.cells[index-3].value)\r\n                                  }>See {cell.row.cells[index].value} meals</Button>\r\n                              </TableCell>\r\n                            )\r\n                          } else {\r\n                            return (\r\n                              <TableCell key={index}>\r\n                                {cell.row.cells[index].value}\r\n                              </TableCell>);\r\n                          }\r\n                          // {return <td {...cell.getCellProps()}>\r\n                          //   {cell.render('Cell')}\r\n                          // </td>}\r\n                        })\r\n                      }\r\n                    </TableRow>\r\n                  )\r\n                })\r\n              }\r\n            </TableBody>\r\n          </MaUTable>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function handleClickGoToCategoryMeals(idCategory, categoryDescription, categoryThumb) {\r\n    history.push({pathname: `/list/${idCategory}`, state: {description: categoryDescription, thumb: categoryThumb}});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Grid container spacing={3} className={classes.container}>\r\n          {allMealsCategories.length === 0 \r\n          ? <div className={classes.preloader}>\r\n              {/* <CircularProgress /> */}\r\n              <Card style={{width: '100%'}}>\r\n                <CardContent>\r\n                  <Skeleton animation=\"wave\" variant=\"rect\" width=\"100%\" height={200} />\r\n                  <Skeleton animation=\"wave\" variant=\"text\" height={40} />\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          : (\r\n            tableMode ? <Table />\r\n            : (\r\n              allMealsCategories.map((category) => {\r\n                return (\r\n                  <Grid item xs={12} sm={6} md={4} key={category.idCategory}>\r\n                    <Card>\r\n                      <CardActionArea\r\n                        onClick={() =>\r\n                          handleClickGoToCategoryMeals(category.strCategory, category.strCategoryDescription, category.strCategoryThumb)\r\n                        }\r\n                      >\r\n                        <CardMedia\r\n                          className={classes.media}\r\n                          image={category.strCategoryThumb}\r\n                          title={`${category.strCategory} category image`}\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"h4\" className={classes.center}>\r\n                            {category.strCategory}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          fullWidth\r\n                          onClick={() =>\r\n                            handleClickGoToCategoryMeals(category.strCategory, category.strCategoryDescription, category.strCategoryThumb)\r\n                          }\r\n                        >\r\n                          See meals of this category\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  </Grid>\r\n                );\r\n              })\r\n            )\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealsList.js",["73","74","75"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealDetails.js",["76"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\errors\\Error404.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\services\\api.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\components\\tablesColumns.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\utils\\Utils.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\CreateAccount.js",["77"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\routes.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\components\\Header.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\App.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":49,"column":6,"nodeType":"86","endLine":49,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":94,"column":6,"nodeType":"86","endLine":94,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":116,"column":54,"nodeType":"92","messageId":"93","endLine":116,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":119,"column":61,"nodeType":"92","messageId":"93","endLine":119,"endColumn":63},{"ruleId":"84","severity":1,"message":"94","line":101,"column":6,"nodeType":"86","endLine":101,"endColumn":8,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"91","line":131,"column":54,"nodeType":"92","messageId":"93","endLine":131,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":134,"column":61,"nodeType":"92","messageId":"93","endLine":134,"endColumn":63},{"ruleId":"84","severity":1,"message":"94","line":111,"column":6,"nodeType":"86","endLine":111,"endColumn":8,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"85","line":34,"column":6,"nodeType":"86","endLine":34,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'logged'. Either include them or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'allMealsCategories'. Either include it or remove the dependency array.",["101"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["102"],["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},{"desc":"105","fix":"112"},"Update the dependencies array to be: [history, logged]",{"range":"113","text":"114"},"Update the dependencies array to be: [allMealsCategories]",{"range":"115","text":"116"},"Update the dependencies array to be: [match.params.id]",{"range":"117","text":"118"},{"range":"119","text":"118"},{"range":"120","text":"114"},[1399,1401],"[history, logged]",[2747,2749],"[allMealsCategories]",[2765,2767],"[match.params.id]",[2440,2442],[1199,1201]]