[{"C:\\DEV-VSCODE\\desafio-onesight\\src\\routes.js":"1","C:\\DEV-VSCODE\\desafio-onesight\\src\\utils\\Utils.js":"2","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealCategories.js":"3","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\Login.js":"4","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealsList.js":"5","C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealDetails.js":"6"},{"size":1015,"mtime":1606475916626,"results":"7","hashOfConfig":"8"},{"size":284,"mtime":1607288423465,"results":"9","hashOfConfig":"8"},{"size":10759,"mtime":1607288345367,"results":"10","hashOfConfig":"8"},{"size":6835,"mtime":1607290528267,"results":"11","hashOfConfig":"8"},{"size":8993,"mtime":1607289159254,"results":"12","hashOfConfig":"8"},{"size":11891,"mtime":1607290503781,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vu372u",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\DEV-VSCODE\\desafio-onesight\\src\\routes.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\utils\\Utils.js",[],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealCategories.js",["27","28","29"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\Login.js",["30"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealsList.js",["31","32","33"],"C:\\DEV-VSCODE\\desafio-onesight\\src\\pages\\MealDetails.js",["34"],"import { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport api from \"../services/api\";\r\nimport {urlTheMealDB} from \"../utils/Utils\";\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\n/*\r\n  Tela de detalhes da receita\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    // marginBottom: 20\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"10px 0px 0px 0px\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexCenter: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  preloader: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  padding: {\r\n    padding: '20px 20px 10px 20px'\r\n  },\r\n  marginBottom: {\r\n    marginBottom: '20px'\r\n  },\r\n  noTextStyle: {\r\n    textDecoration: 'none',\r\n  },\r\n  txtBtnYoutube: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  btnYoutube: {\r\n    backgroundColor: '#e23b3b',\r\n    display: 'flex',\r\n    minHeight: '70px',\r\n  },\r\n  txtBtnSource: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  btnSource: {\r\n    backgroundColor: 'green',\r\n    display: 'flex',\r\n    minHeight: '70px',\r\n  }\r\n}));\r\n\r\nexport default function MealDetails() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const [allMealDetails, setAllMealDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(match.params.id);\r\n    const mealId = match.params.id;\r\n\r\n    const getAllMealsDetails = async () => {\r\n      const data = await api\r\n        .get(`${urlTheMealDB}/lookup.php?i=${mealId}`)\r\n        .then((response) => {\r\n          return response.data;\r\n        });\r\n      console.log(data);\r\n      setAllMealDetails(data);\r\n    };\r\n\r\n    getAllMealsDetails();\r\n  }, []);\r\n\r\n  function handleGoBackButtonClick() {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <Container maxWidth=\"md\">\r\n        <Button fullWidth size=\"large\" color=\"primary\" variant=\"outlined\" style={{marginBottom: '10px'}} onClick={handleGoBackButtonClick}>\r\n          Go back\r\n        </Button>\r\n        <Grid container spacing={3}>\r\n          {allMealDetails.length === 0 ? (\r\n            <div className={classes.preloader}>\r\n              {/* <CircularProgress /> */}\r\n              <Card style={{width: '100%'}}>\r\n                <CardContent>\r\n                  <Skeleton animation=\"wave\" variant=\"rect\" width='100%' height={200} />\r\n                  <Skeleton animation=\"wave\" variant=\"text\" height={40} />\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          ) : (\r\n            allMealDetails.meals.map((meal) => {\r\n\r\n              return (\r\n                <Grid item xs={12} sm={12} md={12} key={meal.idMeal}>\r\n                  <Card className={classes.marginBottom}>\r\n                    <div className={classes.details}>\r\n                    <CardContent>\r\n                      <Typography variant=\"h3\" gutterBottom>\r\n                        {meal.strMeal}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    </div>\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image={meal.strMealThumb}\r\n                      title={`${meal.strMeal} meal image`}\r\n                    />\r\n                  </Card>\r\n\r\n                  <Grid container spacing={3}>\r\n\r\n                    <Grid item xs={6} sm={6} md={6} lg={3}>\r\n                      <Paper className={classes.padding}>\r\n                        <Typography className={[classes.title, classes.flexCenter]} color=\"textSecondary\" gutterBottom>\r\n                          <FastfoodIcon /> Category\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {meal.strCategory}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={6} md={6} lg={3}>\r\n                      <Paper className={classes.padding}>\r\n                        <Typography className={[classes.title, classes.flexCenter]} color=\"textSecondary\" gutterBottom>\r\n                          <PublicIcon /> Region\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {meal.strArea}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={6} md={6} lg={3}>\r\n                      <a href={meal.strYoutube} target=\"blank\" className={classes.noTextStyle}>\r\n                        <Paper className={[classes.padding, classes.btnYoutube]}>\r\n                          <Typography className={[classes.txtBtnYoutube, classes.flexCenter]} color=\"white\" gutterBottom>\r\n                            <YouTubeIcon /> See on Youtube \r\n                          </Typography>\r\n                        </Paper>\r\n                      </a>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={6} md={6} lg={3}>\r\n                      <a href={meal.strSource} target=\"blank\" className={classes.noTextStyle}>\r\n                        <Paper className={[classes.padding, classes.btnSource]}>\r\n                          <Typography className={[classes.txtBtnSource, classes.flexCenter]} color=\"textSecondary\" gutterBottom>\r\n                            <LinkIcon /> Read on Source\r\n                          </Typography>\r\n                        </Paper>\r\n                      </a>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                      <Paper className={classes.padding}>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                          Recipe Description\r\n                        </Typography>\r\n\r\n                        <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n                          {meal.strInstructions}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n                          Recipe Ingredients:\r\n                        </Typography>\r\n\r\n                        {meal.strIngredient1 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient1}: ${meal.strMeasure1}`}\r\n                        </Typography>}\r\n                        \r\n                        {meal.strIngredient2 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient2}: ${meal.strMeasure2}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient3 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient3}: ${meal.strMeasure3}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient4 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient4}: ${meal.strMeasure4}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient5 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient5}: ${meal.strMeasure5}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient6 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient6}: ${meal.strMeasure6}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient7 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient7}: ${meal.strMeasure7}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient8 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient8}: ${meal.strMeasure8}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient9 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient9}: ${meal.strMeasure9}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient10 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient10}: ${meal.strMeasure10}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient11 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient11}: ${meal.strMeasure11}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient12 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient12}: ${meal.strMeasure12}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient13 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient13}: ${meal.strMeasure13}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient14 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient14}: ${meal.strMeasure14}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient15 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient15}: ${meal.strMeasure15}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient16 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient16}: ${meal.strMeasure16}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient17 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient17}: ${meal.strMeasure17}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient18 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient18}: ${meal.strMeasure18}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient19 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient19}: ${meal.strMeasure19}`}\r\n                        </Typography>}\r\n\r\n                        {meal.strIngredient20 && <Typography gutterBottom variant=\"body1\" component=\"li\">\r\n                          {`${meal.strIngredient20}: ${meal.strMeasure20}`}\r\n                        </Typography>}\r\n\r\n\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                          Tags: {meal.strTags}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"35","severity":1,"message":"36","line":125,"column":6,"nodeType":"37","endLine":125,"endColumn":8,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":165,"column":54,"nodeType":"41","messageId":"42","endLine":165,"endColumn":56},{"ruleId":"39","severity":1,"message":"40","line":168,"column":61,"nodeType":"41","messageId":"42","endLine":168,"endColumn":63},{"ruleId":"35","severity":1,"message":"43","line":68,"column":6,"nodeType":"37","endLine":68,"endColumn":55,"suggestions":"44"},{"ruleId":"35","severity":1,"message":"45","line":101,"column":6,"nodeType":"37","endLine":101,"endColumn":8,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"40","line":131,"column":54,"nodeType":"41","messageId":"42","endLine":131,"endColumn":56},{"ruleId":"39","severity":1,"message":"40","line":134,"column":61,"nodeType":"41","messageId":"42","endLine":134,"endColumn":63},{"ruleId":"35","severity":1,"message":"45","line":111,"column":6,"nodeType":"37","endLine":111,"endColumn":8,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allMealsCategories'. Either include it or remove the dependency array.","ArrayExpression",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history' and 'logged'. Either include them or remove the dependency array.",["49"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["50"],["51"],{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},{"desc":"56","fix":"58"},"Update the dependencies array to be: [allMealsCategories]",{"range":"59","text":"60"},"Update the dependencies array to be: [history, logged, userLoginValues.email, userLoginValues.password]",{"range":"61","text":"62"},"Update the dependencies array to be: [match.params.id]",{"range":"63","text":"64"},{"range":"65","text":"64"},[3502,3504],"[allMealsCategories]",[2013,2062],"[history, logged, userLoginValues.email, userLoginValues.password]",[2761,2763],"[match.params.id]",[2440,2442]]